# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
class InvalidArgument < StandardError; end

class EvenFibonacciSum < InvalidArgument
  attr_accessor :sum

  def initialize
    @sum = 2
  end

  def sum
    @sum
  end

  def find_sum(limit)
    if Integer(limit) rescue false
      calculate_sum(limit)
    else
      InvalidArgument.new("A valid integer is required as an input")
    end
  end

  private

  def calculate_sum(limit)

  end

  def next_even_number_fibonacci(x)

  end
end

even_sum = EvenFibonacciSum.new
p even_sum.find_sum(4000000)